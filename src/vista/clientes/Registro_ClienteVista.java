package vista.clientes;

import vista.autenticacion.Registro_DocIdentidadVista;
import controlador.clientes.ClienteControlador;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import modelo.clientes.Cliente;
import java.util.List;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brand
 */
public class Registro_ClienteVista extends javax.swing.JPanel {

    /**
     * Creates new form Cliente
     */
    public Registro_ClienteVista() {
        initComponents();
        mostrarClientesEnTabla();

        // Verificador de formato de correo para el campo Cl_Correo
        Cl_Correo.setInputVerifier(new InputVerifier() {
            @Override
            public boolean verify(JComponent input) {
                JTextField campo = (JTextField) input;
                String correo = campo.getText().trim();
                String regex = "^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$";
                return correo.matches(regex);
            }

            @Override
            public boolean shouldYieldFocus(JComponent input) {
                if (!verify(input)) {
                    JOptionPane.showMessageDialog(null,
                            "⚠️ El correo no tiene un formato válido. Esto se validará al guardar.",
                            "Correo inválido",
                            JOptionPane.WARNING_MESSAGE);
                    // ✅ AUN ASÍ permitimos cambiar de campo
                }
                return true;
            }
        });
        
        //Evita mostrar fechas pasadas y futuras solo la fecha de hoy
        Date hoy = new Date(); // fecha actual
        CI_FechaRegistro.setMinSelectableDate(hoy);
        CI_FechaRegistro.setMaxSelectableDate(hoy);
        CI_FechaRegistro.setDate(hoy);
        //Desactiva para modificar la fecha registro
        CI_FechaRegistro.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSButtonMaterialIconDos1 = new RSMaterialComponent.RSButtonMaterialIconDos();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Cl_Guardar = new RSMaterialComponent.RSButtonMaterialIconDos();
        Cl_Eliminar = new RSMaterialComponent.RSButtonMaterialIconDos();
        Cl_Editar = new RSMaterialComponent.RSButtonMaterialIconDos();
        Cl_Buscar = new RSMaterialComponent.RSButtonMaterialIconDos();
        panelRound4 = new extra.PanelRound();
        jLabel3 = new javax.swing.JLabel();
        Cl_Codigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Cl_DocumentoIdentidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CL_Nombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Cl_Apellido = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Cl_Direccion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Cl_Telefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Cl_Correo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Cl_CrearDocIdentidad = new RSMaterialComponent.RSButtonMaterialIconDos();
        CI_FechaRegistro = new com.toedter.calendar.JDateChooser();
        panelRound5 = new extra.PanelRound();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Clientes = new javax.swing.JTable();
        Cl_QuitarFiltro = new RSMaterialComponent.RSButtonMaterialIconDos();

        setBackground(new java.awt.Color(239, 235, 233));

        rSButtonMaterialIconDos1.setBackground(new java.awt.Color(58, 42, 83));
        rSButtonMaterialIconDos1.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.GROUP);

        jLabel1.setBackground(new java.awt.Color(58, 42, 83));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(58, 42, 83));
        jLabel1.setText("Registro de Clientes");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(58, 42, 83));
        jLabel2.setText("Complete la informacion de los clientes");

        Cl_Guardar.setBackground(new java.awt.Color(58, 42, 83));
        Cl_Guardar.setText("Guardar");
        Cl_Guardar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        Cl_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_GuardarActionPerformed(evt);
            }
        });

        Cl_Eliminar.setBackground(new java.awt.Color(58, 42, 83));
        Cl_Eliminar.setText("Eliminar");
        Cl_Eliminar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        Cl_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_EliminarActionPerformed(evt);
            }
        });

        Cl_Editar.setBackground(new java.awt.Color(58, 42, 83));
        Cl_Editar.setText("Editar");
        Cl_Editar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        Cl_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_EditarActionPerformed(evt);
            }
        });

        Cl_Buscar.setBackground(new java.awt.Color(58, 42, 83));
        Cl_Buscar.setText("Buscar");
        Cl_Buscar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        Cl_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_BuscarActionPerformed(evt);
            }
        });

        panelRound4.setBackground(new java.awt.Color(255, 255, 255));
        panelRound4.setRoundBottomLeft(75);
        panelRound4.setRoundBottomRight(75);
        panelRound4.setRoundTopLeft(75);
        panelRound4.setRoundTopRight(75);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Codigo:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Documento Identidad:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Nombre:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Apellido:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Direccion:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Telefono:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Correo:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Fecha Registro:");

        Cl_CrearDocIdentidad.setBackground(new java.awt.Color(58, 42, 83));
        Cl_CrearDocIdentidad.setText("Crear");
        Cl_CrearDocIdentidad.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        Cl_CrearDocIdentidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_CrearDocIdentidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound4Layout = new javax.swing.GroupLayout(panelRound4);
        panelRound4.setLayout(panelRound4Layout);
        panelRound4Layout.setHorizontalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(Cl_Correo)
                    .addComponent(Cl_Telefono)
                    .addComponent(Cl_Direccion)
                    .addComponent(Cl_Apellido)
                    .addComponent(CL_Nombre)
                    .addComponent(Cl_Codigo)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound4Layout.createSequentialGroup()
                        .addComponent(Cl_DocumentoIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cl_CrearDocIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CI_FechaRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        panelRound4Layout.setVerticalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cl_Codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cl_DocumentoIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cl_CrearDocIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CL_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cl_Apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cl_Direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cl_Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cl_Correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CI_FechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        panelRound5.setBackground(new java.awt.Color(255, 255, 255));
        panelRound5.setRoundBottomLeft(75);
        panelRound5.setRoundBottomRight(75);
        panelRound5.setRoundTopLeft(75);
        panelRound5.setRoundTopRight(75);

        Tabla_Clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Doc Identidad", "Nombres", "Apellidos", "Direccion", "Telefono", "Correo", "FechaRegistro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla_Clientes);

        javax.swing.GroupLayout panelRound5Layout = new javax.swing.GroupLayout(panelRound5);
        panelRound5.setLayout(panelRound5Layout);
        panelRound5Layout.setHorizontalGroup(
            panelRound5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        panelRound5Layout.setVerticalGroup(
            panelRound5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        Cl_QuitarFiltro.setBackground(new java.awt.Color(58, 42, 83));
        Cl_QuitarFiltro.setText("Refrescar");
        Cl_QuitarFiltro.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.REPLAY);
        Cl_QuitarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_QuitarFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(Cl_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Cl_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panelRound4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelRound5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rSButtonMaterialIconDos1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cl_QuitarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Cl_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Cl_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addComponent(rSButtonMaterialIconDos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cl_QuitarFiltro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Cl_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Cl_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelRound4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cl_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cl_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panelRound5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Cl_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_GuardarActionPerformed
        Cliente cliente = new Cliente();

        cliente.setIdCliente(Cl_Codigo.getText().trim());
        cliente.setIdDocIdentidad(Cl_DocumentoIdentidad.getText().trim());
        cliente.setNombre(CL_Nombre.getText().trim());
        cliente.setApellido(Cl_Apellido.getText().trim());
        cliente.setDireccion(Cl_Direccion.getText().trim());
        cliente.setTelefono(Cl_Telefono.getText().trim());
        cliente.setCorreo(Cl_Correo.getText().trim());

        // Fecha
        Date fechaSeleccionada = CI_FechaRegistro.getDate();
        if (fechaSeleccionada == null) {
            JOptionPane.showMessageDialog(null, "Selecciona una fecha de registro.");
            return;
        }

        LocalDateTime fechaRegistro = fechaSeleccionada.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDateTime();

        if (fechaRegistro.toLocalDate().isBefore(LocalDate.now())) {
            JOptionPane.showMessageDialog(null, "No se permite una fecha de registro anterior a hoy.");
            return;
        }

        cliente.setFechaRegistro(fechaRegistro);

        try {
            ClienteControlador controlador = new ClienteControlador();
            controlador.registrarCliente(cliente);

            JOptionPane.showMessageDialog(null, "✅ Cliente registrado correctamente.");
            mostrarClientesEnTabla();
        } catch (RuntimeException ex) {
            // Este bloque captura los errores personalizados que lanza ClienteDAO
            JOptionPane.showMessageDialog(null, "❌ " + ex.getMessage(), "Error al registrar", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            // Para cualquier otro error inesperado
            JOptionPane.showMessageDialog(null, "❌ Error inesperado al registrar el cliente.");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Cl_GuardarActionPerformed

    private void Cl_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_EliminarActionPerformed
        // Verifica si hay un cliente seleccionado
        int fila = Tabla_Clientes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "⚠️ Debes seleccionar un cliente de la tabla para eliminar.");
            return;
        }

        // Confirmación con el usuario antes de eliminar
        int confirmacion = JOptionPane.showConfirmDialog(null,
                "¿Estás seguro de que deseas eliminar este cliente?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (confirmacion != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            // Obtiene el ID del cliente seleccionado
            String idCliente = Tabla_Clientes.getValueAt(fila, 0).toString();

            // Llama al controlador (no al DAO directamente)
            ClienteControlador controlador = new ClienteControlador();
            boolean eliminado = controlador.eliminarCliente(idCliente);

            if (eliminado) {
                JOptionPane.showMessageDialog(null, "✅ Cliente eliminado correctamente.");
                mostrarClientesEnTabla();
            } else {
                JOptionPane.showMessageDialog(null, "❌ No se pudo eliminar el cliente. Verifica si tiene relaciones con otros datos.");
            }

        } catch (Exception e) {
            // Manejo de errores para usuarios finales
            String mensaje = e.getMessage().toLowerCase();
            if (mensaje.contains("foreign key")) {
                JOptionPane.showMessageDialog(null, "⚠️ Este cliente está relacionado con otros datos. No se puede eliminar.");
            } else if (mensaje.contains("too long")) {
                JOptionPane.showMessageDialog(null, "⚠️ Uno de los campos excede el límite permitido.");
            } else {
                JOptionPane.showMessageDialog(null, "❌ Error inesperado al eliminar el cliente. Intenta nuevamente.");
            }
            e.printStackTrace(); // Para el programador
        }
    }//GEN-LAST:event_Cl_EliminarActionPerformed

    private void Cl_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_EditarActionPerformed
        // Verifica si hay un cliente seleccionado
        int fila = Tabla_Clientes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "⚠️ Seleccione un cliente de la tabla para editar.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Obtener datos del cliente seleccionado desde la tabla
            String idCliente = Tabla_Clientes.getValueAt(fila, 0).toString();
            String docIdentidad = Tabla_Clientes.getValueAt(fila, 1).toString();
            String nombre = Tabla_Clientes.getValueAt(fila, 2).toString();
            String apellido = Tabla_Clientes.getValueAt(fila, 3).toString();
            String direccion = Tabla_Clientes.getValueAt(fila, 4).toString();
            String telefono = Tabla_Clientes.getValueAt(fila, 5).toString();
            String correo = Tabla_Clientes.getValueAt(fila, 6).toString();

            // Crear objeto Cliente con los datos
            Cliente cliente = new Cliente();
            cliente.setIdCliente(idCliente);
            cliente.setIdDocIdentidad(docIdentidad);
            cliente.setNombre(nombre);
            cliente.setApellido(apellido);
            cliente.setDireccion(direccion);
            cliente.setTelefono(telefono);
            cliente.setCorreo(correo);

            // Crear el panel EditarCliente
            EditarCliente panelEditar = new EditarCliente(); // Constructor sin parámetros
            panelEditar.setDatosCliente(cliente);

            // Crear una nueva ventana (JFrame) para el panel EditarCliente
            JFrame frame = new JFrame("Editar Cliente");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            if (panelEditar.getParent() != null) {
                panelEditar.getParent().remove(panelEditar);
            }
            frame.getContentPane().add(panelEditar);
            frame.pack();
            frame.setLocationRelativeTo(null); // Centrar la ventana
            frame.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Error inesperado al abrir el formulario de edición: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_Cl_EditarActionPerformed

    private void Cl_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_BuscarActionPerformed
        // TODO add your handling code here:
        BuscarClientes panel = new BuscarClientes(this);
        javax.swing.JFrame frame = new javax.swing.JFrame("Buscar Clientes");
        frame.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
        frame.getContentPane().add(panel);
        frame.pack();
        frame.setLocationRelativeTo(null); // Centrar
        frame.setVisible(true);
    }//GEN-LAST:event_Cl_BuscarActionPerformed

    private void Cl_CrearDocIdentidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_CrearDocIdentidadActionPerformed
        // TODO add your handling code here:
        Registro_DocIdentidadVista panel = new Registro_DocIdentidadVista();

        javax.swing.JFrame frame = new javax.swing.JFrame("Registrar Documento de Identidad");
        frame.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
        frame.getContentPane().add(panel);
        frame.pack();
        frame.setLocationRelativeTo(null); // Centrar
        frame.setVisible(true);
    }//GEN-LAST:event_Cl_CrearDocIdentidadActionPerformed

    private void Cl_QuitarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_QuitarFiltroActionPerformed
        // TODO add your handling code here:
        mostrarClientesEnTabla();
    }//GEN-LAST:event_Cl_QuitarFiltroActionPerformed

    public void mostrarClientesEnTabla() {
        //Instanciamos lel controlador y la lista
        ClienteControlador controlador = new ClienteControlador();
        List<Cliente> lista = controlador.obtenerClientes();

        // Obtenemos el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) Tabla_Clientes.getModel();
        modelo.setRowCount(0); // Limpiar filas anteriores

        // Agregamos cada cliente al modelo
        for (Cliente c : lista) {
            modelo.addRow(new Object[]{
                c.getIdCliente(),
                c.getIdDocIdentidad(),
                c.getNombre(),
                c.getApellido(),
                c.getDireccion(),
                c.getTelefono(),
                c.getCorreo(),
                c.getFechaRegistro().toString()
            });
        }
    }

    public void actualizarTablaConResultados(List<Cliente> resultados) {
        DefaultTableModel modelo = (DefaultTableModel) Tabla_Clientes.getModel();
        modelo.setRowCount(0); // Limpiar tabla actual

        for (Cliente c : resultados) {
            modelo.addRow(new Object[]{
                c.getIdCliente(),
                c.getIdDocIdentidad(),
                c.getNombre(),
                c.getApellido(),
                c.getDireccion(),
                c.getTelefono(),
                c.getCorreo(),
                c.getFechaRegistro()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser CI_FechaRegistro;
    private javax.swing.JTextField CL_Nombre;
    private javax.swing.JTextField Cl_Apellido;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_Buscar;
    private javax.swing.JTextField Cl_Codigo;
    private javax.swing.JTextField Cl_Correo;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_CrearDocIdentidad;
    private javax.swing.JTextField Cl_Direccion;
    private javax.swing.JTextField Cl_DocumentoIdentidad;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_Editar;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_Eliminar;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_Guardar;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_QuitarFiltro;
    private javax.swing.JTextField Cl_Telefono;
    private javax.swing.JTable Tabla_Clientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private extra.PanelRound panelRound4;
    private extra.PanelRound panelRound5;
    private RSMaterialComponent.RSButtonMaterialIconDos rSButtonMaterialIconDos1;
    // End of variables declaration//GEN-END:variables

    public void setCodigo(int aInt) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
