package vista.autenticacion;

import controlador.autenticacion.DocIdentidadControlador;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.autenticacion.DocIdentidad;

/**
 *
 * @author mauro
 */
public class Registro_DocIdentidadVista extends javax.swing.JPanel {

    private DocIdentidadControlador controlador;
    private String nuevoIdDocIdentidad; // Para almacenar el ID recién creado
    private JFrame parentFrame; // Para cerrar la ventana

    public Registro_DocIdentidadVista(JFrame frame) {
        this.parentFrame = frame; // Asignar el JFrame recibido
        controlador = new DocIdentidadControlador();
        initComponents();
        CI_CodigoDoc.setEditable(false); // Deshabilitar edición del ID
        CI_CodigoDoc.setText(controlador.obtenerSiguienteId()); // Mostrar ID generado
        mostrarDocumentosEnTabla();
        // Configurar ComboBox
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panelRound4 = new extra.PanelRound();
        jLabel3 = new javax.swing.JLabel();
        CI_CodigoDoc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CI_NumeroDocumento = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        panelRound5 = new extra.PanelRound();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Documentos = new javax.swing.JTable();
        Int_Guardar = new RSMaterialComponent.RSButtonMaterialIconDos();
        Int_Eliminar = new RSMaterialComponent.RSButtonMaterialIconDos();
        Int_Editar = new RSMaterialComponent.RSButtonMaterialIconDos();
        rSButtonMaterialIconDos5 = new RSMaterialComponent.RSButtonMaterialIconDos();
        Cl_QuitarFiltro = new RSMaterialComponent.RSButtonMaterialIconDos();
        Cl_Buscar = new RSMaterialComponent.RSButtonMaterialIconDos();

        setBackground(new java.awt.Color(239, 235, 233));

        jLabel1.setBackground(new java.awt.Color(58, 42, 83));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(61, 77, 33));
        jLabel1.setText("Registro de Documentos de Identidad");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(61, 77, 33));
        jLabel2.setText("Complete la informacion");

        panelRound4.setBackground(new java.awt.Color(255, 255, 255));
        panelRound4.setRoundBottomLeft(30);
        panelRound4.setRoundBottomRight(30);
        panelRound4.setRoundTopLeft(30);
        panelRound4.setRoundTopRight(30);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setText("Codigo Documento:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setText("Tipo de Documento:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setText("Numero de Documento:");

        CI_NumeroDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CI_NumeroDocumentoActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "Pasaporte", "RUC", "Carnet Extranjetía" }));
        jComboBox1.setToolTipText("");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound4Layout = new javax.swing.GroupLayout(panelRound4);
        panelRound4.setLayout(panelRound4Layout);
        panelRound4Layout.setHorizontalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CI_NumeroDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(CI_CodigoDoc, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        panelRound4Layout.setVerticalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CI_CodigoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CI_NumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jComboBox1.getAccessibleContext().setAccessibleName("");

        panelRound5.setBackground(new java.awt.Color(255, 255, 255));
        panelRound5.setRoundBottomLeft(30);
        panelRound5.setRoundBottomRight(30);
        panelRound5.setRoundTopLeft(30);
        panelRound5.setRoundTopRight(30);

        Tabla_Documentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Tipo", "Numero Documento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla_Documentos);

        javax.swing.GroupLayout panelRound5Layout = new javax.swing.GroupLayout(panelRound5);
        panelRound5.setLayout(panelRound5Layout);
        panelRound5Layout.setHorizontalGroup(
            panelRound5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        panelRound5Layout.setVerticalGroup(
            panelRound5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        Int_Guardar.setBackground(new java.awt.Color(61, 77, 33));
        Int_Guardar.setText("Guardar");
        Int_Guardar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        Int_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Int_GuardarActionPerformed(evt);
            }
        });

        Int_Eliminar.setBackground(new java.awt.Color(61, 77, 33));
        Int_Eliminar.setText("Eliminar");
        Int_Eliminar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        Int_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Int_EliminarActionPerformed(evt);
            }
        });

        Int_Editar.setBackground(new java.awt.Color(61, 77, 33));
        Int_Editar.setText("Editar");
        Int_Editar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        Int_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Int_EditarActionPerformed(evt);
            }
        });

        rSButtonMaterialIconDos5.setBackground(new java.awt.Color(61, 77, 33));
        rSButtonMaterialIconDos5.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.GROUP_ADD);
        rSButtonMaterialIconDos5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonMaterialIconDos5ActionPerformed(evt);
            }
        });

        Cl_QuitarFiltro.setBackground(new java.awt.Color(61, 77, 33));
        Cl_QuitarFiltro.setText("Refrescar");
        Cl_QuitarFiltro.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.REPLAY);
        Cl_QuitarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_QuitarFiltroActionPerformed(evt);
            }
        });

        Cl_Buscar.setBackground(new java.awt.Color(61, 77, 33));
        Cl_Buscar.setText("Buscar");
        Cl_Buscar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        Cl_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cl_BuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelRound4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Int_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addGap(10, 10, 10)
                                    .addComponent(Int_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Int_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addGap(10, 10, 10)
                                    .addComponent(Cl_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                        .addGap(12, 12, 12)
                        .addComponent(panelRound5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rSButtonMaterialIconDos5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cl_QuitarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(rSButtonMaterialIconDos5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)))
                    .addComponent(Cl_QuitarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelRound4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Int_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Int_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Int_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cl_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panelRound5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Int_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Int_GuardarActionPerformed
        try {
            // Crear el objeto con datos del formulario
            DocIdentidad documento = new DocIdentidad();
            documento.setIdDocIdentidad(CI_CodigoDoc.getText());
            documento.setTipoDocumento((String) jComboBox1.getSelectedItem());
            documento.setNumeroDocumento(CI_NumeroDocumento.getText().trim());

            // Validar el documento
            if (!documento.isValid()) {
                String tipo = documento.getTipoDocumento();
                String mensaje = "El número de documento no cumple con el formato válido. ";
                String ejemplo = "";
                switch (tipo) {
                    case "DNI" -> {
                        mensaje += "Formato esperado: 8 dígitos.";
                        ejemplo = "Ejemplo: 12345678";
                    }
                    case "Pasaporte" -> {
                        mensaje += "Formato esperado: 9 dígitos.";
                        ejemplo = "Ejemplo: 123456789";
                    }
                    case "RUC" -> {
                        mensaje += "Formato esperado: 12 dígitos.";
                        ejemplo = "Ejemplo: 123456789012";
                    }
                    case "Carnet Extranjetía" -> {
                        mensaje += "Formato esperado: 12 dígitos.";
                        ejemplo = "Ejemplo: 123456789012";
                    }
                    default ->
                        mensaje += "Formato no especificado.";
                }
                JOptionPane.showMessageDialog(this, mensaje + "\n" + ejemplo, "Error de Formato", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Llamar al controlador
            controlador.registrarDocumento(documento);

            // Almacenar el ID recién creado
            nuevoIdDocIdentidad = documento.getIdDocIdentidad();

            // Mostrar mensaje y actualizar tabla
            JOptionPane.showMessageDialog(this, "✅ Documento guardado correctamente");
            mostrarDocumentosEnTabla();

            // Limpiar campos y preparar nuevo ID
            CI_NumeroDocumento.setText("");
            jComboBox1.setSelectedIndex(0);
            CI_CodigoDoc.setText(controlador.obtenerSiguienteId());

            // Cerrar la ventana
            if (parentFrame != null) {
                parentFrame.dispose();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el documento:\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Int_GuardarActionPerformed

    private void Int_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Int_EliminarActionPerformed
        try {
            int filaSeleccionada = Tabla_Documentos.getSelectedRow();

            if (filaSeleccionada == -1) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Por favor selecciona una fila para eliminar",
                        "Aviso", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Obtener el código del documento desde la tabla
            String idDoc = Tabla_Documentos.getValueAt(filaSeleccionada, 0).toString();

            // Confirmación
            int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
                    "¿Estás seguro de eliminar el documento con código: " + idDoc + "?",
                    "Confirmar eliminación", javax.swing.JOptionPane.YES_NO_OPTION);

            if (confirm == javax.swing.JOptionPane.YES_OPTION) {
                DocIdentidadControlador controlador = new DocIdentidadControlador();
                controlador.eliminarDocumento(idDoc);
                mostrarDocumentosEnTabla(); // Actualizar tabla

                javax.swing.JOptionPane.showMessageDialog(this,
                        "Documento eliminado correctamente");
            }

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Error al eliminar el documento:\n" + e.getMessage(),
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Int_EliminarActionPerformed

    private void Int_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Int_EditarActionPerformed
        int fila = Tabla_Documentos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "⚠️ Debes seleccionar una fila de la tabla para editar.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Obtener el ID del documento seleccionado
        String idDoc = Tabla_Documentos.getValueAt(fila, 0).toString();
        DocIdentidad documento = controlador.obtenerDocumentoPorId(idDoc);

        // Verificar si se obtuvo el documento
        if (documento == null) {
            JOptionPane.showMessageDialog(this, "⚠️ No se pudo obtener el documento con ID: " + idDoc, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Abrir formulario de edición con datos prellenados
        EditarDocumento panelEditar = new EditarDocumento(new JFrame());
        panelEditar.setDatosDocumento(documento);
        JFrame frame = new JFrame("Editar Documento");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        if (panelEditar.getParent() != null) {
            panelEditar.getParent().remove(panelEditar);
        }
        frame.getContentPane().add(panelEditar);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);

        // Listener para actualizar la tabla al cerrar
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                mostrarDocumentosEnTabla();
            }
        });
    }//GEN-LAST:event_Int_EditarActionPerformed
    public void mostrarDocumentosEnTabla() {
        List<DocIdentidad> lista = controlador.obtenerDocumentos();
        DefaultTableModel modelo = (DefaultTableModel) Tabla_Documentos.getModel();
        modelo.setRowCount(0);
        for (DocIdentidad d : lista) {
            modelo.addRow(new Object[]{d.getIdDocIdentidad(), d.getTipoDocumento(), d.getNumeroDocumento()});
        }
    }
    private void rSButtonMaterialIconDos5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonMaterialIconDos5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rSButtonMaterialIconDos5ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        CI_NumeroDocumento.setText("");
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void Cl_QuitarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_QuitarFiltroActionPerformed
        // TODO add your handling code here:
        mostrarDocumentosEnTabla();
    }//GEN-LAST:event_Cl_QuitarFiltroActionPerformed

    private void Cl_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cl_BuscarActionPerformed
        System.out.println("Botón Buscar clicado"); // Depuración
        try {
            BuscarDocumento panel = new BuscarDocumento(this);
            javax.swing.JFrame frame = new javax.swing.JFrame("Buscar Documentos");
            frame.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
            frame.getContentPane().add(panel);
            frame.pack();
            frame.setLocationRelativeTo(this);
            frame.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al abrir el formulario de búsqueda: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_Cl_BuscarActionPerformed

    private void CI_NumeroDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CI_NumeroDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CI_NumeroDocumentoActionPerformed

// Método para obtener el ID recién creado
    public String getNuevoIdDocIdentidad() {
        return nuevoIdDocIdentidad;
    }

    // En Registro_DocIdentidadVista.java
    public void actualizarTablaConResultados(List<DocIdentidad> resultados) {
        DefaultTableModel modelo = (DefaultTableModel) Tabla_Documentos.getModel();
        modelo.setRowCount(0); // Limpiar tabla

        for (DocIdentidad doc : resultados) {
            modelo.addRow(new Object[]{
                doc.getIdDocIdentidad(),
                doc.getTipoDocumento(),
                doc.getNumeroDocumento()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CI_CodigoDoc;
    private javax.swing.JTextField CI_NumeroDocumento;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_Buscar;
    private RSMaterialComponent.RSButtonMaterialIconDos Cl_QuitarFiltro;
    private RSMaterialComponent.RSButtonMaterialIconDos Int_Editar;
    private RSMaterialComponent.RSButtonMaterialIconDos Int_Eliminar;
    private RSMaterialComponent.RSButtonMaterialIconDos Int_Guardar;
    private javax.swing.JTable Tabla_Documentos;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private extra.PanelRound panelRound4;
    private extra.PanelRound panelRound5;
    private RSMaterialComponent.RSButtonMaterialIconDos rSButtonMaterialIconDos5;
    // End of variables declaration//GEN-END:variables
}
